{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","undefined","results","setResults","componentSize","setComponentSize","validation","setValidation","timer","setTimer","handleChange","e","target","name","value","handleSelect","val","i","handleSubmit","max","noError","Object","values","some","length","notification","open","message","description","icon","WarningOutlined","style","color","Math","floor","random","setTimeout","onFormLayoutChange","size","className","onClick","spinning","delay","type","labelCol","span","wrapperCol","layout","initialValues","onValuesChange","onChange","Option","min","required","tooltip","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.8804e8b5.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport {\n  Form,\n  Input,\n  Button,\n  Select,\n  InputNumber,\n  Spin,\n  Alert\n} from 'antd';\nimport 'antd/dist/antd.css';\nimport { notification } from 'antd';\nimport { WarningOutlined } from '@ant-design/icons';\n\nfunction App() {\n\n  const [results, setResults] = useState(undefined);\n  const [componentSize, setComponentSize] = useState('default');\n  const [validation, setValidation] = useState({})\n  const [timer, setTimer] = useState(false);\n\n  const openNotification = () => {\n    notification.open({\n      message: 'Faltan campos por completar',\n      description:\n        'Para poder completar su solicitud por favor complete los campos restantes.',\n      icon: < WarningOutlined style={{ color: '#108ee9' }} />,\n    });\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValidation({\n      ...validation,\n      [name]: value\n    });\n  }\n\n  const handleSelect = (val, i) => {\n    setValidation({\n      ...validation,\n      [i]: val\n    });\n\n  }\n\n  const handleSubmit = () => {\n    const noError = Object.values(validation).some(val =>\n      !val.length) && Object.values(validation).length === 10\n\n\n    if (!noError) {\n      openNotification()\n    }\n    if (noError) {\n      setResults(getRandomInt(100))\n      setTimer(true);\n      setTimeout(() => {\n        setTimer(false);\n      }, 5000)\n    }\n  }\n\n  const onFormLayoutChange = ({ size }) => {\n    setComponentSize(size);\n  };\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n\n  const renderForm = () => {\n    return (\n      <div >\n        <div className=\"title\">\n          Por favor, responda las siguientes preguntas con total honestidad para poder procesar su solicitud.\n        </div >\n\n        <div className=\"description\">\n          Recuerde que todas las preguntas son obligatorias y que solo podrá llenar el formulario una sola vez.\n        </div >\n        <div className=\"form\">\n\n          <Form\n            labelCol={{\n              span: 4,\n            }}\n            wrapperCol={{\n              span: 14,\n            }}\n            layout=\"horizontal\"\n            initialValues={{\n              size: componentSize,\n            }}\n            onValuesChange={onFormLayoutChange}\n            size={componentSize}\n          >\n            <div className='question'>Sigue algún deporte por televisión? En su caso indique cual.</div>\n\n            <Input className=\"select\" name='1' onChange={(val) => handleChange(val)} />\n\n            <div className='question'>Que gusto de helado es su favorito?.</div>\n\n            <Input className=\"select\" name='2' onChange={(val) => handleChange(val)} />\n\n            <div className='question'>Es mejor Messi o Maradona</div>\n\n            <Select className=\"select\" onChange={(val) => handleSelect(val, 3)} >\n              <Select.Option value=\"messi\">Messi</Select.Option>\n              <Select.Option value=\"maradona\">Maradona</Select.Option>\n            </Select>\n\n            <div className='question'>Le gusta el pescado?</div>\n\n            <Select className=\"select\" onChange={(val) => handleSelect(val, 4)} >\n              <Select.Option value=\"si\">Si</Select.Option>\n              <Select.Option value=\"no\">No</Select.Option>\n            </Select>\n\n            <div className='question'> En general, cual de las siguientes opciones elige para desayunar?</div>\n            <Select className=\"select\" onChange={(val) => handleSelect(val, 5)}>\n              <Select.Option value=\"cafe\">Café</Select.Option>\n              <Select.Option value=\"mate\">Mate</Select.Option>\n              <Select.Option value=\"te\">Té</Select.Option>\n              <Select.Option value=\"chocolatada\">Chocolatada</Select.Option>\n            </Select>\n\n            <div className='question'>Juega habitualmente al Metegol?</div>\n\n            <Select className=\"select\" onChange={(val) => handleSelect(val, 6)}>\n              <Select.Option value=\"yes\">Si</Select.Option>\n              <Select.Option value=\"nope\">No</Select.Option>\n            </Select>\n\n            <div className='question'> Cual de las siguientes opciones es más de su agrado?</div>\n\n            <Select className=\"select\" onChange={(val) => handleSelect(val, 7)}>\n              <Select.Option value=\"pancho\">Pancho</Select.Option>\n              <Select.Option value=\"chori\">Choripan</Select.Option>\n            </Select>\n\n            <div className='question'> Elija una de las siguientes opciones</div>\n\n            <Select className=\"select\" onChange={(val) => handleSelect(val, 8)}>\n              <Select.Option value=\"playa\">Playa</Select.Option>\n              <Select.Option value=\"montana\">Montaña</Select.Option>\n            </Select>\n\n            <div className='question'> Que le gusta más, Pepsi o Coca?</div>\n\n            <Select className=\"select\" onChange={(val) => handleSelect(val, 9)}>\n              <Select.Option value=\"pepsi\">Pepsi</Select.Option>\n              <Select.Option value=\"coca\">Coca</Select.Option>\n              <Select.Option value=\"ninguna\">Ninguna</Select.Option>\n            </Select>\n\n            <div className='question'>Tiene mascotas? Indique cuantas.</div>\n\n            <InputNumber min='0' onChange={(val) => handleSelect(val, 10)} className=\"select\" required tooltip=\"This is a required field\" />\n\n            <div className=\"select\">\n              <Button onClick={handleSubmit}>Enviar</Button>\n            </div>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n\n  const renderResult = () => {\n    return (\n      <div className='results'>\n        {timer ? <>\n          <Spin spinning={timer} delay={500}>\n            <Alert\n              message=\"Estamos procesando su solicitud.\"\n              description=\"Por favor, aguarde un momento\"\n              type=\"info\"\n            />\n          </Spin>\n        </>\n          :\n          <>\n            {results % 2 === 0 ?\n              \"Lamentamos informar que BARATMED.SA ha rechazado su solicitud de afiliación. Por cualquier consulta puede comunicarse a 11-3468-4798\" : \"Estimado Cliente: Dado que ha sido aprobado su test de solicitud de afiliación, nos comunicaremos con Ud. para continuar con el proceso de afiliación.\"\n            }\n          </>\n        }\n      </div>\n\n    )\n\n\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"navbar\">\n        <div className=\"logo\" onClick={() => setResults(undefined)} />\n      </div>\n      <div className=\"container\">\n        <div className=\"body\">\n          {results ? renderResult() : renderForm()}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}